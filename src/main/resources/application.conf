constructr {
  coordination {
    host       = ${CONSUL_MASTER}
    port       = 8500
  }

  consul.agent-name = ${HOST}

  coordination-timeout = 3 seconds   // Maximum response time for coordination service (e.g. etcd)
  max-nr-of-seed-nodes = 0           // Any nonpositive value means Int.MaxValue
  nr-of-retries        = 10          // Nr. of tries are nr. of retries + 1
  refresh-interval     = 30 seconds  // TTL is refresh-interval * ttl-factor
  retry-delay          = 10 seconds  // Give coordination service (e.g. etcd) some delay before retrying
  ttl-factor           = 10.0         // Must be greater or equal 1 + ((coordination-timeout * (1 + nr-of-retries) + retry-delay * nr-of-retries)/ refresh-interval)!

  join-timeout = 60 seconds // Might depend on cluster size and network properties
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  extensions = [de.heikoseeberger.constructr.akka.ConstructrExtension]

  cluster {
    metrics.enabled = off
    auto-down-unreachable-after = 5s
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel= "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel                         = debug
  log-dead-letters                 = off
  log-dead-letters-during-shutdown = off

  remote {
    log-remote-lifecycle-events = error
  }
}